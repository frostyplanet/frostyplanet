filetype plugin indent on
set wrap
set linebreak
set nolist
set modeline
set ts=4 sw=4 softtabstop=4

"au BufReadPost * :DetectIndent

syntax on
set hls "highlight search

highlight SpellBad cterm=underline ctermbg=black ctermfg=red

au FileType python setl ts=4 et sw=4 softtabstop=4
au FileType lua setl ts=4 et sw=4 softtabstop=4
au FileType yaml setl ts=2 et sw=2 softtabstop=2
au FileType c,cpp setl ts=2 et sw=2 softtabstop=2
au FileType go setl noet sw=4 softtabstop=4 ts=4
au FileType set ft=text
" disbable conceal set by IndentLine plugin
au FileType json let g:indentLine_setConceal = 0

set omnifunc=syntaxcomplete#Complete
set completeopt=longest,menuone
let g:acp_behaviorPerlOmniLength = 0
let g:indentLine_enabled = 1
let g:indentLine_char = 'â”†'
let g:indentLine_color_term = 2

" Auto remove tailing space before saving
autocmd BufWritePre * :%s/\s\+$//e

map <F2>  :!ctags --exclude='*.vim' --exclude='build' --exclude='venv' -R . >/dev/null<CR>
let g:tagbar_type_go = {
    \ 'ctagstype': 'go',
    \ 'kinds' : [
        \'p:package',
        \'f:function',
        \'v:variables',
        \'t:type',
        \'c:const'
    \]
	\}

let g:winManagerWindowLayout = "FileExplorer"
" vim khuno flake8
let g:khuno_ignore="E501,E402,E302,W601"
map <c-w><c-f> :FirstExplorerWindow<cr>
map <c-w><c-b> :BottomExplorerWindow<cr>
map <c-w><c-t> :WMToggle<cr> :TagbarToggle<cr>

" gvim right menu
:set mousemodel=popup
